"""
Задание 4.
Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.
Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.
Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""

# Вариант 1 с классом.


class Users:
    users = []

    def __init__(self, login: str, password: str, authentication: bool):
        self.login = login
        self.password = password
        self.authentication = authentication
        self.__class__.users.append(self)


nikolai = Users("Nikolai", "123", False)
maxim = Users("Maxim", "321", False)
jack = Users("Jack", "777", False)


# сложность: O(n)
def authorization_1():
    login = input("Пожалуйста введите Ваш логин: ")  # O(1)
    password = input("Пожалуйста введите Ваш пароль: ")  # O(1)
    for user in Users.users:  # O(n)
        if user.login == login and user.password == password:  # O(1) * O(1) * O(1) = O(1)
            if user.authentication:  # O(1)
                return "Доступ разрешен"  # O(1)
            else:  # O(1)
                return "Пожалуйста пройдите аутентификацию"  # O(1)
    return "Доступ запрещен"  # O(1)


print(authorization_1())


# Вариант 2 со словарем
users = {
    "Nikolai": {
        "password": "123",
        "authentication": False
    },
    "Maxim": {
        "password": "321",
        "authentication": False
    },
    "Jack": {
        "password": "777",
        "authentication": False
    }
}


# Сложность: O(n)
def authorization_2():
    login = input("Пожалуйста введите Ваш логин: ")  # O(1)
    password = input("Пожалуйста введите Ваш пароль: ")  # O(1)
    if login not in users:  # O(n)
        return "Доступ запрещен"  # O(1)
    else:  # O(1)
        if users[login]["password"] == password:  # O(1)
            if users[login]["authentication"]:  # O(1)
                return "Доступ разрешен"  # O(1)
            else:  # O(1)
                return "Пожалуйста пройдите аутентификацию"  # O(1)
        else:  # O(1)
            return "Доступ запрещен"  # O(1)


print(authorization_2())

"""
Оба варианта имеют линейное время выполнения.
"""
